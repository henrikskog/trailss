import {
  ContactShadows,
  Environment,
  OrbitControls,
  useGLTF
} from "@react-three/drei";
import { Canvas } from "@react-three/fiber";
import React, { useState } from "react";
import { useAnimationFrame } from "./useAnimationFrame";

interface Props {
  position: number[];
  rotation: [number, number, number]
}

const Model: React.FC<Props> = ({ position, rotation }) => {
  /*
  Auto-generated by: https://github.com/pmndrs/gltfjsx
  author: JasperTobias (https://sketchfab.com/JasperTobias)
  license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
  source: https://sketchfab.com/3d-models/lowpoly-earth-ce0cce9b528b47c7984bf0b2b600d705
  title: LowPoly Earth
  */
  const { nodes, materials } = useGLTF("/earth.gltf");
  return (
    <group
      rotation={rotation}
      position={position}
      dispose={null}
    >
      <mesh
        geometry={nodes["URF-Height_Lampd_Ice_0"].geometry}
        material={materials.Lampd_Ice}
      />
      <mesh
        geometry={nodes["URF-Height_watr_0"].geometry}
        material={materials.watr}
        material-roughness={0}
      />
      <mesh
        geometry={nodes["URF-Height_Lampd_0"].geometry}
        material={materials.Lampd}
        material-color="#00c800"
      >
        <group position={[0, 0, 1.3]} rotation={[0, 0, Math.PI]}></group>
      </mesh>
    </group>
  );
};

export default function Viewer() {
  const [rotation, setRotation] = useState<[number, number, number]>([-Math.PI / 2, 0, Math.PI])
  const ROT_SPEED = 0.001

  // Function that gets ran for every frame in animation loop. Deltatime is the time since the function was last called.
  const animate = () =>{
      // Pass on a function to the setter of the state
      // to make sure we always have the latest state
      setRotation((prevRotation) => {
        const [px, py, pz] = prevRotation

        return [px+ROT_SPEED, py+ROT_SPEED, pz+ROT_SPEED]
      })

  }

    useAnimationFrame(animate, 30)

  return (
    <>
    <Canvas camera={{ position: [4, 0, 0], fov: 50 }}>
      <ambientLight intensity={0.5} />
      <Model position={[0, 0.25, 0]} rotation={rotation} />
      <Environment preset="city" />
      {/* @ts-ignore */}
      <ContactShadows
        frames={1}
        scale={5}
        position={[0, -1, 0]}
        far={1}
        blur={5}
        opacity={0.5}
        color="#204080"
      />
      <OrbitControls
      enableZoom={false}
      />
    </Canvas>

    </>
  );
}
